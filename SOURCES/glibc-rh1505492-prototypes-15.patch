commit 41075ae3e7f406e67d51da8cc5e89e397710d54b
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Oct 20 11:52:27 2015 +0000

    Convert 29 more function definitions to prototype style (multiple parameters in one K&R parameter declaration).
    
    This automatically-generated patch converts 29 function definitions in
    glibc (including one in an example in the manual) from old-style K&R
    to prototype-style.  Following my other recent such patches, this one
    deals with the case of function definitions where one K&R parameter
    declaration declares multiple parameters, as in:
    
    void
    foo (a, b)
         int a, *b;
    {
    }
    
    Tested for x86_64 and x86 (testsuite, and that installed stripped
    shared libraries are unchanged by the patch).
    
            * crypt/crypt.c (_ufc_doit_r): Convert to prototype-style function
            definition.
            (_ufc_doit_r): Likewise.
            * crypt/crypt_util.c (_ufc_copymem): Likewise.
            (_ufc_output_conversion_r): Likewise.
            * inet/inet_mkadr.c (__inet_makeaddr): Likewise.
            * inet/rcmd.c (rcmd_af): Likewise.
            (rcmd): Likewise.
            (ruserok_af): Likewise.
            (ruserok): Likewise.
            (ruserok2_sa): Likewise.
            (ruserok_sa): Likewise.
            (iruserok_af): Likewise.
            (iruserok): Likewise.
            (__ivaliduser): Likewise.
            (__validuser2_sa): Likewise.
            * inet/rexec.c (rexec_af): Likewise.
            (rexec): Likewise.
            * inet/ruserpass.c (ruserpass): Likewise.
            * locale/programs/xmalloc.c (xcalloc): Likewise.
            * manual/examples/timeval_subtract.c (timeval_subtract): Likewise.
            * math/w_drem.c (__drem): Likewise.
            * math/w_dremf.c (__dremf): Likewise.
            * math/w_dreml.c (__dreml): Likewise.
            * misc/daemon.c (daemon): Likewise.
            * resolv/res_debug.c (p_fqnname): Likewise.
            * stdlib/div.c (div): Likewise.
            * string/memcmp.c (memcmp_bytes): Likewise.
            * sunrpc/pmap_rmt.c (pmap_rmtcall): Likewise.
            * sunrpc/svc_udp.c (svcudp_bufcreate): Likewise.

diff --git a/crypt/crypt.c b/crypt/crypt.c
index 34b8f2e280263f7a..c86f8a8ab0663f47 100644
--- a/crypt/crypt.c
+++ b/crypt/crypt.c
@@ -36,9 +36,8 @@
 #define SBA(sb, v) (*(long32*)((char*)(sb)+(v)))
 
 void
-_ufc_doit_r(itr, __data, res)
-     ufc_long itr, *res;
-     struct crypt_data * __restrict __data;
+_ufc_doit_r (ufc_long itr, struct crypt_data * __restrict __data,
+	     ufc_long *res)
 {
   int i;
   long32 s, *k;
@@ -82,9 +81,8 @@ _ufc_doit_r(itr, __data, res)
 #define SBA(sb, v) (*(long64*)((char*)(sb)+(v)))
 
 void
-_ufc_doit_r(itr, __data, res)
-     ufc_long itr, *res;
-     struct crypt_data * __restrict __data;
+_ufc_doit_r (ufc_long itr, struct crypt_data * __restrict __data,
+	     ufc_long *res)
 {
   int i;
   long64 l, r, s, *k;
diff --git a/crypt/crypt_util.c b/crypt/crypt_util.c
index 954bbfcfebd169b6..9a48e27a81ea7eb3 100644
--- a/crypt/crypt_util.c
+++ b/crypt/crypt_util.c
@@ -312,9 +312,7 @@ _ufc_clearmem (char *start, int cnt)
 }
 
 void
-_ufc_copymem(from, to, cnt)
-     char *from, *to;
-     int cnt;
+_ufc_copymem (char *from, char *to, int cnt)
 {
   while(cnt--)
     *to++ = *from++;
@@ -770,10 +768,8 @@ _ufc_dofinalperm_r (ufc_long *res, struct crypt_data * __restrict __data)
  */
 
 void
-_ufc_output_conversion_r(v1, v2, salt, __data)
-     ufc_long v1, v2;
-     const char *salt;
-     struct crypt_data * __restrict __data;
+_ufc_output_conversion_r (ufc_long v1, ufc_long v2, const char *salt,
+			  struct crypt_data * __restrict __data)
 {
   int i, s, shf;
 
diff --git a/inet/rcmd.c b/inet/rcmd.c
index efca27d674720e9c..9f7455eb1ca29045 100644
--- a/inet/rcmd.c
+++ b/inet/rcmd.c
@@ -103,12 +103,8 @@ libc_hidden_proto (iruserok_af)
 libc_freeres_ptr(static char *ahostbuf);
 
 int
-rcmd_af(ahost, rport, locuser, remuser, cmd, fd2p, af)
-	char **ahost;
-	u_short rport;
-	const char *locuser, *remuser, *cmd;
-	int *fd2p;
-	sa_family_t af;
+rcmd_af (char **ahost, u_short rport, const char *locuser, const char *remuser,
+	 const char *cmd, int *fd2p, sa_family_t af)
 {
 	char paddr[INET6_ADDRSTRLEN];
 	struct addrinfo hints, *res, *ai;
@@ -360,11 +356,8 @@ bad:
 libc_hidden_def (rcmd_af)
 
 int
-rcmd(ahost, rport, locuser, remuser, cmd, fd2p)
-	char **ahost;
-	u_short rport;
-	const char *locuser, *remuser, *cmd;
-	int *fd2p;
+rcmd (char **ahost, u_short rport, const char *locuser, const char *remuser,
+      const char *cmd, int *fd2p)
 {
   return rcmd_af (ahost, rport, locuser, remuser, cmd, fd2p, AF_INET);
 }
@@ -434,10 +427,8 @@ int	__check_rhosts_file = 1;
 char	*__rcmd_errstr;
 
 int
-ruserok_af(rhost, superuser, ruser, luser, af)
-	const char *rhost, *ruser, *luser;
-	int superuser;
-	sa_family_t af;
+ruserok_af (const char *rhost, int superuser, const char *ruser,
+	    const char *luser, sa_family_t af)
 {
 	struct addrinfo hints, *res, *res0;
 	int gai;
@@ -461,9 +452,8 @@ ruserok_af(rhost, superuser, ruser, luser, af)
 libc_hidden_def (ruserok_af)
 
 int
-ruserok(rhost, superuser, ruser, luser)
-	const char *rhost, *ruser, *luser;
-	int superuser;
+ruserok (const char *rhost, int superuser, const char *ruser,
+	 const char *luser)
 {
 	return ruserok_af(rhost, superuser, ruser, luser, AF_INET);
 }
@@ -523,11 +513,8 @@ iruserfopen (const char *file, uid_t okuser)
  * Returns 0 if ok, -1 if not ok.
  */
 static int
-ruserok2_sa (ra, ralen, superuser, ruser, luser, rhost)
-     struct sockaddr *ra;
-     size_t ralen;
-     int superuser;
-     const char *ruser, *luser, *rhost;
+ruserok2_sa (struct sockaddr *ra, size_t ralen, int superuser,
+	     const char *ruser, const char *luser, const char *rhost)
 {
   FILE *hostf = NULL;
   int isbad = -1;
@@ -584,22 +571,17 @@ ruserok2_sa (ra, ralen, superuser, ruser, luser, rhost)
  * ruserok_sa() is now discussed on ipng, so
  * currently disabled for external use
  */
-static int ruserok_sa(ra, ralen, superuser, ruser, luser)
-     struct sockaddr *ra;
-     size_t ralen;
-     int superuser;
-     const char *ruser, *luser;
+static int
+ruserok_sa (struct sockaddr *ra, size_t ralen, int superuser,
+	    const char *ruser, const char *luser)
 {
   return ruserok2_sa(ra, ralen, superuser, ruser, luser, "-");
 }
 
 /* This is the exported version.  */
 int
-iruserok_af (raddr, superuser, ruser, luser, af)
-     const void *raddr;
-     int superuser;
-     const char *ruser, *luser;
-     sa_family_t af;
+iruserok_af (const void *raddr, int superuser, const char *ruser,
+	     const char *luser, sa_family_t af)
 {
   struct sockaddr_storage ra;
   size_t ralen;
@@ -626,10 +608,7 @@ iruserok_af (raddr, superuser, ruser, luser, af)
 libc_hidden_def (iruserok_af)
 
 int
-iruserok (raddr, superuser, ruser, luser)
-     u_int32_t raddr;
-     int superuser;
-     const char *ruser, *luser;
+iruserok (u_int32_t raddr, int superuser, const char *ruser, const char *luser)
 {
   return iruserok_af (&raddr, superuser, ruser, luser, AF_INET);
 }
@@ -646,10 +625,8 @@ iruserok (raddr, superuser, ruser, luser)
  * Returns 0 if ok, -1 if not ok.
  */
 int
-__ivaliduser(hostf, raddr, luser, ruser)
-	FILE *hostf;
-	u_int32_t raddr;
-	const char *luser, *ruser;
+__ivaliduser (FILE *hostf, u_int32_t raddr, const char *luser,
+	      const char *ruser)
 {
 	struct sockaddr_in ra;
 	memset(&ra, '\0', sizeof(ra));
@@ -760,11 +737,8 @@ __isempty (char *p)
  * Returns 0 if positive match, -1 if _not_ ok.
  */
 static int
-__validuser2_sa(hostf, ra, ralen, luser, ruser, rhost)
-	FILE *hostf;
-	struct sockaddr *ra;
-	size_t ralen;
-	const char *luser, *ruser, *rhost;
+__validuser2_sa (FILE *hostf, struct sockaddr *ra, size_t ralen,
+		 const char *luser, const char *ruser, const char *rhost)
 {
     const char *user;
     char *p;
diff --git a/inet/rexec.c b/inet/rexec.c
index 75bb47082b3fa4f2..4e6d48d6b8060b07 100644
--- a/inet/rexec.c
+++ b/inet/rexec.c
@@ -49,12 +49,8 @@ int	rexecoptions;
 libc_freeres_ptr (static char *ahostbuf);
 
 int
-rexec_af(ahost, rport, name, pass, cmd, fd2p, af)
-	char **ahost;
-	int rport;
-	const char *name, *pass, *cmd;
-	int *fd2p;
-	sa_family_t af;
+rexec_af (char **ahost, int rport, const char *name, const char *pass,
+	  const char *cmd, int *fd2p, sa_family_t af)
 {
 	struct sockaddr_storage from;
 	struct addrinfo hints, *res0;
@@ -198,11 +194,8 @@ bad:
 libc_hidden_def (rexec_af)
 
 int
-rexec(ahost, rport, name, pass, cmd, fd2p)
-	char **ahost;
-	int rport;
-	const char *name, *pass, *cmd;
-	int *fd2p;
+rexec (char **ahost, int rport, const char *name, const char *pass,
+       const char *cmd, int *fd2p)
 {
 	return rexec_af(ahost, rport, name, pass, cmd, fd2p, AF_INET);
 }
diff --git a/inet/ruserpass.c b/inet/ruserpass.c
index f64ca3f1c12d478e..ec0acb4d46a1bb43 100644
--- a/inet/ruserpass.c
+++ b/inet/ruserpass.c
@@ -94,8 +94,7 @@ static const struct toktab {
 
 
 int
-ruserpass(host, aname, apass)
-	const char *host, **aname, **apass;
+ruserpass (const char *host, const char **aname, const char **apass)
 {
 	char *hdir, *buf, *tmp;
 	char myname[1024], *mydomain;
diff --git a/locale/programs/xmalloc.c b/locale/programs/xmalloc.c
index bfc86ab77c29ef0b..4415664d45b4bddd 100644
--- a/locale/programs/xmalloc.c
+++ b/locale/programs/xmalloc.c
@@ -81,8 +81,7 @@ xmalloc (size_t n)
 /* Allocate memory for N elements of S bytes, with error checking.  */
 
 VOID *
-xcalloc (n, s)
-     size_t n, s;
+xcalloc (size_t n, size_t s)
 {
   VOID *p;
 
diff --git a/manual/examples/timeval_subtract.c b/manual/examples/timeval_subtract.c
index 232d4b199c9d8b1a..bff6f0204e4cdc34 100644
--- a/manual/examples/timeval_subtract.c
+++ b/manual/examples/timeval_subtract.c
@@ -20,8 +20,7 @@
    Return 1 if the difference is negative, otherwise 0.  */
 
 int
-timeval_subtract (result, x, y)
-     struct timeval *result, *x, *y;
+timeval_subtract (struct timeval *result, struct timeval *x, struct timeval *y)
 {
   /* Perform the carry for the later subtraction by updating @var{y}. */
   if (x->tv_usec < y->tv_usec) {
diff --git a/math/w_drem.c b/math/w_drem.c
index 9e2b1e7472cc565b..843b67aa80335849 100644
--- a/math/w_drem.c
+++ b/math/w_drem.c
@@ -8,8 +8,7 @@
 #include <math.h>
 
 double
-__drem(x, y)
-	double x, y;
+__drem (double x, double y)
 {
 	return __remainder(x, y);
 }
diff --git a/math/w_dremf.c b/math/w_dremf.c
index 4ec4baffd4c4fa3f..029e6bdf7f811e08 100644
--- a/math/w_dremf.c
+++ b/math/w_dremf.c
@@ -9,8 +9,7 @@
 #include <math_private.h>
 
 float
-__dremf(x, y)
-	float x, y;
+__dremf (float x, float y)
 {
 	return __remainderf(x, y);
 }
diff --git a/math/w_dreml.c b/math/w_dreml.c
index aa73eedc496bca65..8d0139ac28061ccc 100644
--- a/math/w_dreml.c
+++ b/math/w_dreml.c
@@ -10,8 +10,7 @@
 #include <math.h>
 
 long double
-__dreml(x, y)
-	long double x, y;
+__dreml (long double x, long double y)
 {
 	return __remainderl(x, y);
 }
diff --git a/misc/daemon.c b/misc/daemon.c
index 7597ce9996d5fde1..9d186b24bdc8ead0 100644
--- a/misc/daemon.c
+++ b/misc/daemon.c
@@ -41,8 +41,7 @@ static char sccsid[] = "@(#)daemon.c	8.1 (Berkeley) 6/4/93";
 #include <not-cancel.h>
 
 int
-daemon(nochdir, noclose)
-	int nochdir, noclose;
+daemon (int nochdir, int noclose)
 {
 	int fd;
 
diff --git a/stdlib/div.c b/stdlib/div.c
index a388080ed2852792..f4367c8770cff758 100644
--- a/stdlib/div.c
+++ b/stdlib/div.c
@@ -51,8 +51,7 @@
 
 /* Return the `div_t' representation of NUMER over DENOM.  */
 div_t
-div (numer, denom)
-     int numer, denom;
+div (int numer, int denom)
 {
   div_t result;
 
diff --git a/string/memcmp.c b/string/memcmp.c
index 2600c9d8038043a6..dbb286c7061fcbd6 100644
--- a/string/memcmp.c
+++ b/string/memcmp.c
@@ -97,8 +97,7 @@ static int memcmp_bytes (op_t, op_t) __THROW;
 __inline
 # endif
 static int
-memcmp_bytes (a, b)
-     op_t a, b;
+memcmp_bytes (op_t a, op_t b)
 {
   long int srcp1 = (long int) &a;
   long int srcp2 = (long int) &b;
diff --git a/sunrpc/pmap_rmt.c b/sunrpc/pmap_rmt.c
index c0adc5b49ac4c54f..c8a8011ea5474b3b 100644
--- a/sunrpc/pmap_rmt.c
+++ b/sunrpc/pmap_rmt.c
@@ -64,13 +64,9 @@ static const struct timeval timeout = {3, 0};
  * programs to do a lookup and call in one step.
  */
 enum clnt_stat
-pmap_rmtcall (addr, prog, vers, proc, xdrargs, argsp, xdrres, resp, tout, port_ptr)
-     struct sockaddr_in *addr;
-     u_long prog, vers, proc;
-     xdrproc_t xdrargs, xdrres;
-     caddr_t argsp, resp;
-     struct timeval tout;
-     u_long *port_ptr;
+pmap_rmtcall (struct sockaddr_in *addr, u_long prog, u_long vers, u_long proc,
+	      xdrproc_t xdrargs, caddr_t argsp, xdrproc_t xdrres, caddr_t resp,
+	      struct timeval tout, u_long *port_ptr)
 {
   int socket = -1;
   CLIENT *client;
diff --git a/sunrpc/svc_udp.c b/sunrpc/svc_udp.c
index d1c8788d20b6805c..c1139b035317e886 100644
--- a/sunrpc/svc_udp.c
+++ b/sunrpc/svc_udp.c
@@ -118,9 +118,7 @@ struct svcudp_data
  * The routines returns NULL if a problem occurred.
  */
 SVCXPRT *
-svcudp_bufcreate (sock, sendsz, recvsz)
-     int sock;
-     u_int sendsz, recvsz;
+svcudp_bufcreate (int sock, u_int sendsz, u_int recvsz)
 {
   bool_t madesock = FALSE;
   SVCXPRT *xprt;
