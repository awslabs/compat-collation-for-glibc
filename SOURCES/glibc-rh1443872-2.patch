Add missing newlines to __libc_fatal error messages.  This was
implemented upstream in commits a6e8926f8d49a213a9abb1a61f6af964f612ab7f
("[BZ #20271] Add newlines in __libc_fatal calls.") and
36f30c104fe3addd4d864e276202c6b934f825b7
("__netlink_assert_response: Add more __libc_fatal newlines [BZ #20271]").

diff --git a/sysdeps/unix/sysv/linux/netlink_assert_response.c b/sysdeps/unix/sysv/linux/netlink_assert_response.c
index b570e93db840fec1..434b50d20b67d130 100644
--- a/sysdeps/unix/sysv/linux/netlink_assert_response.c
+++ b/sysdeps/unix/sysv/linux/netlink_assert_response.c
@@ -73,12 +73,12 @@ __netlink_assert_response (int fd, ssize_t result)
           char message[200];
           if (family < 0)
             __snprintf (message, sizeof (message),
-                        "Unexpected error %d on netlink descriptor %d",
+                        "Unexpected error %d on netlink descriptor %d\n",
                         error_code, fd);
           else
             __snprintf (message, sizeof (message),
                         "Unexpected error %d on netlink descriptor %d"
-                        " (address family %d)",
+                        " (address family %d)\n",
                         error_code, fd, family);
           __libc_fatal (message);
         }
@@ -93,12 +93,12 @@ __netlink_assert_response (int fd, ssize_t result)
       if (family < 0)
           __snprintf (message, sizeof (message),
                       "Unexpected netlink response of size %zd"
-                      " on descriptor %d",
+                      " on descriptor %d\n",
                       result, fd);
       else
           __snprintf (message, sizeof (message),
                       "Unexpected netlink response of size %zd"
-                      " on descriptor %d (address family %d)",
+                      " on descriptor %d (address family %d)\n",
                       result, fd, family);
       __libc_fatal (message);
     }
